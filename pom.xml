<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.zizka.junitdiff</groupId>
    <artifactId>JUnitDiff</artifactId>
    <packaging>jar</packaging>
    <version>1.6.0-SNAPSHOT</version>

    <name>JUnitDiff</name>
    <url>http://ondra.zizka.cz/stranky/programovani/java/junit-test-results-report-comparison-junitdiff.texy</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mainClass>ch.zizka.junitdiff.JUnitDiffApp</mainClass>
        <distDir>${project.basedir}/../dist</distDir>
        <jvm.args.debug/>
        <kotlin.version>1.8.0-Beta</kotlin.version>
    </properties>
    
    <scm>
        <url>https://github.com/OndraZizka/junitdiff</url>
        <connection>scm:git:git://github.com/OndraZizka/junitdiff.git</connection>
        <developerConnection>scm:git:git@github.com:OndraZizka/junitdiff.git</developerConnection>
    </scm>

    <build>

        <resources>
            <!-- This allows to have resources next to java files. For convenience in IDE. -->
            <resource>
                <directory>src/main/java</directory>
                <excludes><exclude>**/*.java</exclude></excludes>
            </resource>
            <!-- This is the default resources dir; the resource above would disable it. -->
            <resource> <directory>src/main/resources</directory> </resource>
            <resource> <directory>xslt</directory>
                <filtering>true</filtering>
                <includes><include>*.xsl</include></includes>
            </resource>
        </resources>

        <plugins>
          
            <!-- Compiler -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId><artifactId>kotlin-maven-plugin</artifactId><version>${kotlin.version}</version>
                <executions>
                    <execution><id>compile</id><phase>compile</phase><goals><goal>compile</goal></goals></execution>
                    <execution><id>test-compile</id><phase>test-compile</phase><goals><goal>test-compile</goal></goals></execution>
                </executions>
                <configuration>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId><artifactId>maven-compiler-plugin</artifactId><version>3.10.1</version>
                <executions>
                    <execution><id>compile</id><phase>compile</phase><goals><goal>compile</goal></goals></execution>
                    <execution><id>testCompile</id><phase>test-compile</phase><goals><goal>testCompile</goal></goals></execution>
                </executions>
                <configuration>  <source>1.8</source> <target>1.8</target> </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>  <artifactId>maven-antrun-plugin</artifactId> <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>clean</phase>  <goals><goal>run</goal></goals>
                        <configuration> <tasks>
                            <unzip src="src/test/data/hibernate-ann-run1.zip" dest="target/sample-data/" overwrite="true" />
                            <unzip src="src/test/data/hibernate-ann-run2.zip" dest="target/sample-data/" overwrite="true" />
                            <unzip src="src/test/data/hibernate-ann-run3.zip" dest="target/sample-data/" overwrite="true" />
                        </tasks> </configuration>
                    </execution>
                    <execution> <id>copy-dist</id> <phase>install</phase> <goals><goal>run</goal></goals>
                        <configuration> <target>
                            <!--<copy file="${project.build.directory}/dist/${project.artifactId}.${project.packaging}" todir="${project.build.directory}/dist/${project.version}" verbose="true" />-->
                            <copy file="${project.build.directory}/dist/${project.artifactId}.${project.packaging}" todir="${distDir}/${project.version}" verbose="true" />
                        </target> </configuration> 
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId><artifactId>appassembler-maven-plugin</artifactId><version>1.10</version>
                <!--<executions>  <execution>     <phase>package</phase>  <goals><goal>assemble</goal></goals>  </execution>  </executions>-->
                <configuration>
                    <programs>
                        <program>
                            <mainClass>${mainClass}</mainClass>
                            <name>JUnitDiff</name>
                        </program>
                    </programs>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions><execution><phase>package</phase><goals><goal>single</goal></goals></execution></executions>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <finalName>${project.artifactId}</finalName>
                    <outputDirectory>${project.build.directory}/dist</outputDirectory>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <!-- Jar - MANIFEST.MF options. -->
                    <archive>
                        <manifest>
                            <addClasspath>false</addClasspath>
                            <mainClass>${mainClass}</mainClass>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                    </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.22.2</version>
                <configuration>
                    <workingDirectory>target/</workingDirectory>
                    <systemPropertyVariables>
                        <junitdiff.test.data.dir>${basedir}/src/test/data</junitdiff.test.data.dir>
                        <moje>AaA</moje>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

        </plugins>

    </build>

    <profiles>

        <!-- Debug. -->
        <profile>
            <id>debug</id>
            <activation><property><name>debug</name></property></activation>
            <properties>
                <jvm.args.debug>-Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=y</jvm.args.debug>
            </properties>
        </profile>

    </profiles>


    <repositories>
        <repository><id>ondrazizka-googlecode</id><url>http://ondrazizka.googlecode.com/svn/maven</url></repository>
    </repositories>

    <dependencies>

        <dependency><groupId>org.jetbrains.kotlin</groupId><artifactId>kotlin-stdlib-jdk8</artifactId><version>${kotlin.version}</version></dependency>
        <dependency><groupId>org.jetbrains.kotlin</groupId><artifactId>kotlin-test</artifactId><version>${kotlin.version}</version><scope>test</scope></dependency>

        <!-- Commons -->
        <dependency><groupId>org.apache.commons</groupId><artifactId>commons-lang3</artifactId><version>3.12.0</version></dependency>
        <dependency><groupId>org.apache.commons</groupId><artifactId>commons-text</artifactId><version>1.10.0</version></dependency>
        <dependency><groupId>commons-io</groupId><artifactId>commons-io</artifactId><version>2.11.0</version></dependency>

        <!-- JDom -->
        <dependency><groupId>org.jdom</groupId><artifactId>jdom</artifactId><version>1.1.3</version></dependency>
        <!-- JDom's XPath needs these, otherwise XPath.newInstance("/testsuite/testcase") throws... -->
        <dependency><groupId>org.jdom</groupId><artifactId>jaxen-core</artifactId><version>1.0-FCS</version></dependency> <!-- CNFEx org.jaxen.NamespaceContext -->
        <dependency><groupId>org.jdom</groupId><artifactId>jaxen-jdom</artifactId><version>1.0-FCS</version></dependency><!-- NoClassDefFoundError: org/jaxen/jdom/JDOMXPath: org/jaxen/jdom/JDOMXPath -->
        <dependency><groupId>org.jdom</groupId><artifactId>saxpath</artifactId><version>1.0-FCS</version></dependency><!-- CNFEx org.saxpath.SAXPathException -->

        <dependency><groupId>org.slf4j</groupId><artifactId>slf4j-log4j12</artifactId><version>1.7.36</version></dependency>

        <!-- Test dependencies -->
        <dependency><groupId>junit</groupId><artifactId>junit</artifactId><version>4.13.2</version><scope>test</scope></dependency>

    </dependencies>

    <pluginRepositories>
        <pluginRepository><id>codehaus</id><name>Codehaus Release Repo</name><url>http://repository.codehaus.org</url></pluginRepository>
        <pluginRepository><id>codehaus-snapshot</id><name>Codehaus Snapshot Repo</name><url>http://snapshots.repository.codehaus.org</url></pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <downloadUrl>http://code.google.com/p/junitdiff/downloads/list</downloadUrl>
        <repository><id>local-hack-repo</id><name>LocalDir</name><url>file://${project.basedir}/../dist-maven</url></repository>
        <snapshotRepository><id>local-hack-repo-snap</id><name>LocalDir</name><url>file://${project.basedir}/../dist-maven</url></snapshotRepository>
    </distributionManagement>  

</project>
